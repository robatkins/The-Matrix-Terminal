{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-149a0f81\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"scanlines\"\n}, null, -1));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"matrix-background\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"raining-text\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"editor-text\"\n})])], -1));\nconst _hoisted_3 = [_hoisted_1, _hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _hoisted_3);\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_1","_hoisted_2","_createElementBlock","_hoisted_3"],"sources":["/Users/arkana/react-apps/matrix/src/components/TheMatrix.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"scanlines\"></div>\n    <div class=\"matrix-background\">\n      <div class=\"raining-text\">\n        <div class=\"editor-text\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'TheMatrix',\n  mounted() {\n    this.startAnimation();\n  },\n  methods: {\n    startAnimation() {\n      const textElement = this.$el.querySelector('.editor-text');\n      \n      function set(txt) {\n        textElement.innerHTML = txt;\n      }\n\n      function slicer(str) {\n        const sliced = [];\n        for (let i = 0; i <= str.length; i++) {\n          sliced.push(str.slice(0, i));\n        }\n        return sliced;\n      }\n\n      function pause(str, time) {\n        const strings = [];\n        for (let i = 0; i < time; i++) {\n          strings.push(str);\n        }\n        return strings;\n      }\n\n      function assemble(statements) {\n        let slices = [];\n        statements.forEach(function (stmt) {\n          const sliced = slicer(stmt);\n          const interstatementPause = pause(\"\", 3);\n          slices = slices.concat(sliced);\n          slices = slices.concat(pause(stmt, 30));\n          slices = slices.concat(interstatementPause);\n        });\n        return slices;\n      }\n\n      const statements = [\n        \"Wake up, Neo...\",\n        \"The Matrix has you...\",\n        \"Follow the white rabbit.\",\n        \"Knock, knock, Neo.\",\n        \"Built by Robert Atkins using Vue.js and Node.\",\n        \"Hosted on AWS in a S3 Bucket.\",\n      ];\n\n      function rand(min, max) {\n        return min + Math.random() * (max - min) | 0;\n      }\n\n      const slices = assemble(statements);\n\n      function animate() {\n        const current = slices.shift();\n        set(current);\n        slices.push(current);\n        setTimeout(animate, rand(50, 250));\n      }\n\n      animate();\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import url('https://fonts.googleapis.com/css?family=Ubuntu+Mono');\n\n$text-color: #9F9;\n$shadow: #0F0;\n\nbody {\n  background: #010;\n  filter: blur(1px);\n  overflow: hidden;\n}\n\n.scanlines {\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  \n  background-image: linear-gradient(#020 0%, transparent 25%);\n  background-size: 4px 4px;\n}\n\n.editor-text {\n  color: $text-color;\n  font-size: 3em;\n  text-shadow: 1px 0px 5px $shadow, \n    -1px 0px 2px $shadow;\n  font-family: 'Ubuntu Mono', monospace;\n  font-weight: light;\n  line-height: 2em;\n  margin: 100px;\n}\n</style>"],"mappings":";;gEAEIA,mBAAA,CAA6B;EAAxBC,KAAK,EAAC;AAAW;gEACtBD,mBAAA,CAIM;EAJDC,KAAK,EAAC;AAAmB,I,aAC5BD,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAc,I,aACvBD,mBAAA,CAA+B;EAA1BC,KAAK,EAAC;AAAa,G;oBAH5BC,UAA6B,EAC7BC,UAIM,C;;uBANRC,mBAAA,CAOM,aARRC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}